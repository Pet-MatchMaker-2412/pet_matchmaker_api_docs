openapi: 3.1.0
info:
  title: Pet Matchmaker
  description: |-
    Pet Matchmaker Backend API
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
tags:
  - name: user
  - name: questions
  - name: questionnaire submissions
  - name: petfinder animals
paths:
  /users:
    post:
      tags:
        - user
      summary: Create a new user.
      description: Create a new user with a unique username.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
        required: true
      responses:
        "201":
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "422":
          description: Non-unique username or missing username
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /questions:
    get:
      tags:
        - questions
      summary: Fetch all questions.
      description: Fetch all questions and their respective answers.
      responses:
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Questions"
  /users/{id}/questionnaire_submissions:
    get:
      tags:
        - questionnaire submissions
      summary: Fetch all submissions for a user
      description: Fetch all questionnaire submissions for a given user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
      responses:
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionnaireSubmissions"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - questionnaire submissions
      summary: Submit a user questionnaire
      description: Submit a user questionnaire with their answer ids, get a recommended animal in return!
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitQuestionnaire"
        required: true
      responses:
        "201":
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionnaireSubmission"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Invalid or missing answer_ids
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /petfinder_animals:
    get:
      tags:
        - petfinder animals
      summary: Fetch animals from Petfinder API
      description: Fetch specific animals from the Petfinder API near the user's zipcode
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetfinderReq"
        required: true
      responses:
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetfinderAnimals"
        "422":
          description: Invalid or missing zipcode or animal id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              examples: [user]
            id:
              type: string
              examples: [1]
            attributes:
              type: object
              properties:
                username:
                  type: string
                  examples: [something_unique]
    CreateUser:
      type: object
      properties:
        username:
          type: string
          examples: [something_unique]
    Questions:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Question"
    Question:
      type: object
      properties:
        type:
          type: string
          examples: [question]
        id:
          type: string
          examples: [1]
        attributes:
          type: object
          properties:
            text:
              type: string
              examples: [question?]
        relationships:
          type: object
          properties:
            answers:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/Answer"
    Answer:
      type: object
      properties:
        type:
          type: string
          examples: [answer]
        id:
          type: string
          examples: [1]
        attributes:
          type: object
          properties:
            text:
              type: string
              examples: [answer]
    QuestionnaireSubmissions:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/QuestionnaireSubmission"
    QuestionnaireSubmission:
      type: object
      properties:
        type:
          type: string
          examples: [questionnaire_submission]
        id:
          type: string
          examples: [1]
        attributes:
          type: object
          properties:
            recommended_pet_id:
              type: integer
              examples: [1]
        relationships:
          type: object
          properties:
            submission_answers:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/SubmissionAnswer"
            recommended_animal:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      examples: [recommended_animal]
                    id:
                      type: string
                      examples: [1]
                    attributes:
                      type: object
                      properties:
                        type:
                          type: string
                          examples: [dachshund]
                        photo_url:
                          type: string
                          examples: [https://photos.com/dachshund]
    SubmissionAnswer:
      type: object
      properties:
        type:
          type: string
          examples: [submission_answer]
        id:
          type: string
          examples: [1]
        attributes:
          type: object
          properties:
            answer_id:
              type: integer
              examples: [1]
    RecommendedAnimal:
      type: object
      properties:
        type:
          type: string
          examples: [recommended_animal]
        id:
          type: string
          examples: [1]
        attributes:
          type: object
          properties:
            type:
              type: string
              examples: [dachshund]
            photo_url:
              type: string
              examples: [https://photos.com/dachshund]
    PetfinderAnimals:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PetfinderAnimal"
    PetfinderAnimal:
      type: object
      properties:
        type:
          type: string
          examples: [petfinder_animal]
        id:
          type: string
          examples: [1]
        attributes:
          type: object
          properties:
            name:
              type: string
              examples: [Spot]
            photo_url:
              type: string
              examples:
                [
                  https://photos.petfinder.com/photos/pets/42706540/1/?bust=1546042081,
                ]
            age:
              type: string
              examples: [Young]
            gender:
              type: string
              examples: [Male]
            size:
              type: string
              examples: [Medium]
            species:
              type: string
              examples: [Dog]
            city:
              type: string
              examples: [Jersey City]
            state:
              type: string
              examples: [NJ]
            description:
              type: string
              examples: [Spot is an amazing dog]
            email:
              type: string
              examples: [petfindertechsupport@gmail.com]
    PetfinderReq:
      type: object
      properties:
        recommended_animal_id:
          type: integer
          examples: [1]
        zipcode:
          type: string
          examples: [07097]
    SubmitQuestionnaire:
      type: object
      properties:
        answer_ids:
          type: array
          items:
            type: integer
            examples: [[1, 4, 6]]
    Error:
      type: object
      properties:
        status:
          type: integer
          format: int32
          examples: [422, 400, 404]
        message:
          type: string
      required:
        - status
        - message
